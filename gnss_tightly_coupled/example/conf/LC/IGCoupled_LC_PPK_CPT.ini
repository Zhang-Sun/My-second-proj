# INS and GNSS Coupled (IGCoupled) configure file

# NOTE: THIS CONFIGURATION FILE CAN BE USED TO PERFORM PPK/INS LOOSELY COUPLED

# SOME TIPS:
# 			base station coordination in blh format: 34.220254297,117.143996963,36.051
# 			lever: 0.0,0.0,0.0
#           PPK/INS coupled
#           !!! should to be improved

# [option name]:                    [option value]              :[comment]

# -------------------------------------------------------------------------
use_custom_dir;             1;                                  ;(int) 1 use your specified folder, all need file in same dir, 0 store files in a certain pattern,convenient to batch process
prc_date;                   2017,11,07                          ;year,month,day
data_dir;                   /home/~YourDataPath~/~YourDataDir~;    ;(string) specific folder [essential]
site_name;                                                      ;(4string) specified site name, then match the corresponding file, [option]
imu;                        /home/~YourDataPath~/~YourDataDir~/m3903110.imu;             ;your imu data
gsof;                       /home/~YourDataPath~/~YourDataDir~/m3903110.gsof;            ;your gsof data(just lc)
gnss_sol;                   /home/~YourDataPath~/~YourDataDir~/m3903110.sol;             ;your gnss position data(lc)
rslt;                       /home/~YourDataPath~/~YourDataDir~/m3903110.rslt;            ;your result file name (just for lc gsof/sol)
estimator;                  1                                   ;(int) 0 lsq 1 kf 2 fgo
filter_type;                0                                   ;(int) 0 forward 1 backward 2 combined
fgo_window;                 30                                  ;(int) (/s) fgo window size(just for fgo)
integration_len;            1                                   ;(int) (/s) integration length(just for fgo)

# gnss option--------------------------------------------------------------
ele_min;                    10                                  ;(double) ele cut-off angle(deg) [default]
frq_opt;                    1                                  ;(int) used frequency number; 0 FRQ_SINGLE 1 FRQ_DUAL 2 FRQ_TRIPLE
gps_frq;                    0,1,2                              ;(int) specified the used frequency order, to GPS L1,L2,L5,        0 GPS_L1  1 GPS_L2  3 GPS_L5
bds_frq;                    0,1,2                              ;(int) specified the used frequency order, to BD2 B1,B2,B3,        0 BD2_B1I 1 BD2_B2I 2 BD2_B3I
gal_frq;                    0,1,2                              ;(int) specified the used frequency order, to GAL E1,E5a,E5b       0 GAL_E1  1 GAL_E5a 2 GAL_E5b
glo_frq;                    0,1                                ;(int) specified the used frequency order, to GLO G1,G2            0 GLO_G1  1 GLO_G2
qzs_frq;                    0,1,2                              ;(int) specified the used frequency order, to QZS L1,L2,L5         0 QZS_L1  1 QZS_L2  2 QZS_L5
bd3_frq;                    0,2,3                              ;(int) specified the used frequency order, to BD3 B1I,B3I,B1C,B2a, 0 BD3_B1I 2 BD3_B3I 3 BD3_B1C, 4 BD3_B2a, 5 BD3_B2b
adj_obs;                    0                                  ;(int) adjust observation,due to some  high priority observables missing
use_doppler;                0                                  ;(int) used doppler to estimate velocity in SPP
code_phase_ratio;           100.0                              ;(double)
meas_err_factor;            0,0.003,0.003                      ;(double)
ac_opt;                     0                                  ;(int) GNSS product ACs, 0 brdc,1 wum, 2 gbm, 3 com
eph_opt;                    0                                  ;(int) ephemeris option, 0 broadcast, 1 precise
ion_opt;                    0                                  ;(int) ionosphere option, 0 off, 1 klobular 2 tec correction 3 ion-free 4 ion-free2 5 ion-est 6 ion-constraint
trp_opt;                    1                                  ;(int) troposphere option, 0 off, 1 saas, 2 est-wet, 3 est-grad
tid_opt;                    0                                  ;(int) tide correction, 0 off 1 on
glo_ifcb_opt;               0                                  ;(int) glonass inter-frequency code bias modeling 0 off 1 linear 2 quad 3 1-sat 4 1-frq
sat_pcv;                    0                                  ;(int) 0 off 1 on
rec_ant;                    0                                  ;(int) 0 off 1 on
cs_thres;                   5.0,0.15                           ;(double) cycle slip thresthold mw/gf
max_pdop;                   30.0                               ;(double) max pdop value to reject SPP solution
max_prior;                  30.0                               ;(double) max a-prior residual to reject observables
max_inno;                   30.0                               ;
max_out;                    20                                 ;(int)
ait_psd;                    0.0,10E-3,10E-8                    ;(double) ambiguity/ionosphere/troposphere psd
check_dual_phase;           0                                  ;(int) only used satellite if dual-frequency observable exist
ar_mode;                    1                                  ;(int) ar option 0 off, 1 cont
glo_ar_mode;                0                                  ;(int)
bds_ar_mode;                0                                  ;(int)
ar_thres;                   3.0,0.25,0,1E-9,1E-5;              ;(double)
ar_el_mask;                 15.0                               ;(double)
hold_el_mask;               15.0                               ;
min_sat_num2fix;            3                                  ;(int) min satellite number to fix ambiguity
min_sat_num2drop;           8                                  ;(int) min satellite number to drop bad satellite in AR
min_sat_num2hold;           5                                  ;
min_lock2fix;               9                                  ;(int)
min_fix2hold;               10
ar_filter;                  1                                  ;(int)
res_qc;                     0                                  ;(int)
base_coord;                 0,34.220254297,117.143996963,36.051 ;0 enu 1 ecef
use_outage;                 0                                  ;(int) 0 false 1 true (gnss outage simulate)
outage_time;                0                                  ;(int) begin time of outage(gps sec)
outage_len;                 0                                  ;(int) the length of outage time(sec)
outage_period;              0                                  ;(int) outage period (sec) one period : 0

# ins  option-------------------------------------------------------------------------
imu_type;                   1                                  ;(int) imu type 0: IMU_UNKNOW 1: IMU_NOVTEL_CPT 2: IMU_NOVTEL_A1 3: IMU_M39 4: IMU_MTI_CSV
coord_type;                 0                                  ;(int) imu coordination type 0: IMU_COORD_RFU 1: IMU_COORD_FRD
data_format;                0                                  ;(int) imu data format 0: IMU_FORMAT_INCR 1: IMU_FORMAT_RATE
gyro_val_format;            1                                  ;(int) imu gyro value format 0: GYRO_FORMAT_DEG 1: GYRO_FORMAT_RAD
sample_hz;                  100.0                              ;(double) imu sample rate(hz)
ins_align;                  1                                  ;(int) 0: gnss sol(pos and vel) 1: use raw gnss obs 2:
lever;                      0.0,0.0,0.0                        ;(double) lever
correction_time_ba;         0
correction_time_bg;         0
init_pos_unc;               30.0
init_vel_unc;               30.0  
init_att_unc;               0.174532922
init_ba_unc;                9.80665E-2
init_bg_unc;                4.8481367284E-3
init_Ra_unc;                0
init_Rg_unc;                0
init_Sa_unc;                0
init_Sg_unc;                0
psd_acce;                   2.33611111111E-07;
psd_gyro;                   5.72003802085E-09;
psd_ba;                     1E-07;
psd_bg;                     2E-12;
err_model;                  0  
use_odo;                    0                                   ;(bool) whether use odo velocity
abv;                        0,0,0                               ;(rad)  Mounting angle between b-frame and v-frame
lodo;                       0,0,0                               ;(double) lever of odo and imu
init_odo_unc;               0.05                                ;(double) std of odo(m/s)
odo_srw;                    100                                 ;odo scale-factor standard deciation, ppm


# sol_fmt ==> 0: solution organizes in a custom format, you can parse and plot solution using python script in /tools
# sol_fmt ==> 1: solution organizes as same as rtklib, you can plot solution using rtkplot
# out_err_fmt ==> 1: out error solution in ENU respect to true value
# sol  option ------------------------------------------------------------------------
out_sol;                    1                                  ;(int)
sol_fmt;                    1                                  ;(int)
sol_coord;                  2                                  ;(int)
out_head;                   1                                  ;(int)
out_vel;                    0                                  ;(int)
out_att;                    0                                  ;(int)
out_ba;                     0                                  ;(int)
out_bg;                     0                                  ;(int)
out_stat;                   1                                  ;(int)
out_err_fmt;                0                                  ;(int)
out_ins_mech_frq;           50.0                               ;(double)

